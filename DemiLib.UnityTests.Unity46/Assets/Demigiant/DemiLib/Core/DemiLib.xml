<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DemiLib</name>
    </assembly>
    <members>
        <member name="T:DG.DemiLib.Attributes.DeColoredLabelAttribute">
            <summary>
            <code>Property attribute</code>
            <para>Draws the label with the given color and background</para>
            </summary>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeColoredLabelAttribute.#ctor(System.String,System.String)">
            <summary>
            Colors the prefix label for the following property
            </summary>
            <param name="textColor">Prefix label color</param>
            <param name="bgColor">Prefix label bg color</param>
        </member>
        <member name="T:DG.DemiLib.Attributes.DeCommentAttribute">
            <summary>
            <code>Decorator</code>
            <para>Shows a comment in the Inspector</para>
            </summary>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeCondition.#ctor(System.String,System.Boolean)">
            <summary>
            Shows/enables the property only if the condition is met
            </summary>
            <param name="propertyToCompare">Name of the property to check for conditions</param>
            <param name="value">Property value to compare (boolean)</param>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeCondition.#ctor(System.String,System.String,DG.DemiLib.Attributes.Condition)">
            <summary>
            Shows/enables the property only if the condition is met
            </summary>
            <param name="propertyToCompare">Name of the property to check for conditions</param>
            <param name="value">Property value to compare (string)</param>
            <param name="conditionType">Condition type</param>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeCondition.#ctor(System.String,System.Single,DG.DemiLib.Attributes.Condition)">
            <summary>
            Shows/enables the property only if the condition is met
            </summary>
            <param name="propertyToCompare">Name of the property to check for conditions</param>
            <param name="value">Property value to compare (float)</param>
            <param name="conditionType">Condition type</param>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeCondition.#ctor(System.String,System.Int32,DG.DemiLib.Attributes.Condition)">
            <summary>
            Shows/enables the property only if the condition is met
            </summary>
            <param name="propertyToCompare">Name of the property to check for conditions</param>
            <param name="value">Property value to compare (float)</param>
            <param name="conditionType">Condition type</param>
        </member>
        <member name="T:DG.DemiLib.Attributes.DeConditionalAttribute">
            <summary>
            <code>Property attribute</code>
            <para>Shows/hides or enables/disables the property depending on the given conditions</para>
            </summary>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeConditionalAttribute.#ctor(System.String,System.Boolean,DG.DemiLib.Attributes.ConditionalBehaviour)">
            <summary>
            Shows/enables the property only if the condition is met
            </summary>
            <param name="propertyToCompare">Name of the property to check for conditions</param>
            <param name="value">Property value to compare (boolean)</param>
            <param name="behaviour">Behaviour in case condition is not met</param>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeConditionalAttribute.#ctor(System.String,System.String,DG.DemiLib.Attributes.Condition,DG.DemiLib.Attributes.ConditionalBehaviour)">
            <summary>
            Shows/enables the property only if the condition is met
            </summary>
            <param name="propertyToCompare">Name of the property to check for conditions</param>
            <param name="value">Property value to compare (string)</param>
            <param name="conditionType">Condition type</param>
            <param name="behaviour">Behaviour in case condition is not met</param>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeConditionalAttribute.#ctor(System.String,System.Single,DG.DemiLib.Attributes.Condition,DG.DemiLib.Attributes.ConditionalBehaviour)">
            <summary>
            Shows/enables the property only if the condition is met
            </summary>
            <param name="propertyToCompare">Name of the property to check for conditions</param>
            <param name="value">Property value to compare (float)</param>
            <param name="conditionType">Condition type</param>
            <param name="behaviour">Behaviour in case condition is not met</param>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeConditionalAttribute.#ctor(System.String,System.Int32,DG.DemiLib.Attributes.Condition,DG.DemiLib.Attributes.ConditionalBehaviour)">
            <summary>
            Shows/enables the property only if the condition is met
            </summary>
            <param name="propertyToCompare">Name of the property to check for conditions</param>
            <param name="value">Property value to compare (float)</param>
            <param name="conditionType">Condition type</param>
            <param name="behaviour">Behaviour in case condition is not met</param>
        </member>
        <member name="T:DG.DemiLib.Attributes.DeDividerAttribute">
            <summary>
            <code>Decorator</code>
            <para>Draws a divider in the Inspector</para>
            </summary>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeDividerAttribute.#ctor(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Draws a divider with the given size, color and margins
            </summary>
            <param name="height">Divider height</param>
            <param name="hexColor">Hex color (# optional)</param>
            <param name="marginTop">Top margin</param>
            <param name="marginBottom">Bottom margin</param>
        </member>
        <member name="T:DG.DemiLib.Attributes.DeHeaderAttribute">
            <summary>
            <code>Decorator</code>
            <para>Draws a header in the inspector</para>
            </summary>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeHeaderAttribute.#ctor(System.String,System.String,System.String,UnityEngine.FontStyle,System.Int32)">
            <summary>
            Draws a header with a color and background color
            </summary>
            <param name="text">Text</param>
            <param name="textColor">Color hex (no #) for text, leave NULL to use default</param>
            <param name="bgColor">Color hex (no #) for bg, leave NULL to use no bg color</param>
            <param name="fontStyle">Font style</param>
            <param name="fontSize">Font size</param>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeHeaderAttribute.#ctor(System.String,UnityEngine.TextAnchor,System.String,System.String,UnityEngine.FontStyle,System.Int32)">
            <summary>
            Draws a header with a color and background color
            </summary>
            <param name="text">Text</param>
            <param name="textAnchor">TextAnchor</param>
            <param name="textColor">Color hex (no #) for text, leave NULL to use default</param>
            <param name="bgColor">Color hex (no #) for bg, leave NULL to use no bg color</param>
            <param name="fontStyle">Font style</param>
            <param name="fontSize">Font size</param>
        </member>
        <member name="T:DG.DemiLib.Attributes.DeScriptExecutionOrderAttribute">
            <summary>
            <code>Class attribute</code>
            <para>Sets the script execution order index</para>
            </summary>
        </member>
        <member name="M:DG.DemiLib.Attributes.DeScriptExecutionOrderAttribute.#ctor(System.Int32)">
            <summary>
            Sets the script execution order for this class
            </summary>
            <param name="order">Script execution order index</param>
        </member>
        <member name="F:DG.DemiLib.Core.GUIUtils.isProSkin">
            <summary>
            Set when calling <code>DeGUI.BeginGUI</code>
            </summary>
        </member>
        <member name="T:DG.DemiLib.DeColorPalette">
            <summary>
            Stores a color palette, which can be passed to default DeGUI layouts when calling <code>DeGUI.BeginGUI</code>,
            and changed at any time by calling <code>DeGUI.ChangePalette</code>.
            You can inherit from this class to create custom color palettes with more color options.
            </summary>
        </member>
        <member name="T:DG.DemiLib.DeColorBG">
            <summary>
            Background colors
            </summary>
        </member>
        <member name="T:DG.DemiLib.DeColorContent">
            <summary>
            Content colors
            </summary>
        </member>
        <member name="T:DG.DemiLib.DeSkinColor">
            <summary>
            Contains both free and pro skins color variations,
            and automatically returns the correct one when converted to Color
            </summary>
        </member>
    </members>
</doc>
